security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        db_provider:
            entity:
                class: App\Entity\User
                property: username

        in_memory: 
            memory:
                users:
                    admin:
                        password: $2y$13$7n9T.pXEjIfhSUcw6iGoA.iz9xYCW3SVRqhnrMnOdshaZ5UAuaR6G
                        roles: 'ROLE_ADMIN'
        chain_provider:
            chain:
                providers: [in_memory, db_provider]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login
                
            logout:
                path:   /logout
                target: /

            provider: chain_provider

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/backend/answer, roles: ROLE_USER }
        - { path: ^/backend/question, roles: ROLE_USER }

    role_hierarchy:        
        ROLE_MODERATOR:     ROLE_USER
        ROLE_ADMIN:       ROLE_MODERATOR